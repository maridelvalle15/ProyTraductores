// Generated by CoffeeScript 1.7.1
define(['jquery', 'modules/core/browser', 'modules/core/html', 'modules/core/i18n', 'modules/core/notify', 'modules/core/uri', 'modules/clean/analytics', 'modules/clean/react/modal', 'modules/clean/ajax'], function($, Browser, HTML, _arg, Notify, URI, _arg1, modal, ajax) {
  var Rollback, SupportExperimentsWebLogger, _;
  _ = _arg._;
  SupportExperimentsWebLogger = _arg1.SupportExperimentsWebLogger;
  Rollback = {
    configureAllLinks: function(root_sel, link_sel, ref) {
      if (ref == null) {
        ref = null;
      }
      return $(root_sel).on('click', link_sel, function(e) {
        var $link, cs_id, ns_id, redirect, user_id;
        if (ref != null) {
          SupportExperimentsWebLogger.log_file_restore(ref);
        }
        $link = $(e.target);
        user_id = $link.data('user-id');
        ns_id = $link.data('ns-id');
        cs_id = $link.data('cs-id');
        redirect = $link.data('redirect');
        if (redirect == null) {
          redirect = true;
        }
        modal.SimpleModal.show({
          title_text: _("Undo this deletion"),
          body_html: _("Are you sure you want to undo this deletion?"),
          confirm_text: _('Undo deletion'),
          confirm_callback: function() {
            return Rollback.rollback(user_id, ns_id, cs_id, redirect);
          },
          cancel_text: _('Cancel')
        });
        return false;
      });
    },
    configureLink: function(query, title_text, body_text, user_id, ns_id, changeset_id) {
      return $(query).on('click', function(e) {
        modal.SimpleModal.show({
          title_text: title_text,
          body_html: HTML.escape(body_text).toHTML(),
          confirm_text: _('Restore'),
          confirm_callback: function() {
            return Rollback.rollback(user_id, ns_id, changeset_id);
          },
          cancel_text: _('Cancel')
        });
        return false;
      });
    },
    rollback: function(user_id, ns_id, changeset_id, redirect) {
      var changeset_info;
      changeset_info = {};
      changeset_info[ns_id] = changeset_id;
      return ajax.WebProgressRequest({
        url: '/cmd/restore_changesets',
        data: {
          ns_to_cs: JSON.stringify(changeset_info)
        },
        subject_user: user_id,
        html_in_error_msg: true,
        progress_text: _("Restoring files..."),
        success: function() {
          Notify.success(_("Finished restoring files."));
          if (redirect) {
            return Browser.redirect(URI({
              path: "/browse_cs/" + user_id + "/" + ns_id + "/" + changeset_id
            }));
          }
        }
      });
    }
  };
  return Rollback;
});

//# sourceMappingURL=rollback.map
