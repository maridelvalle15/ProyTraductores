// Generated by CoffeeScript 1.7.1
var __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

define(['jquery', 'modules/clean/frame_messenger', 'modules/clean/activity/activity'], function($j, FrameMessenger, Activity) {
  var ActivityContext, FileViewerInterfaceController, VIEWER_TYPES;
  ActivityContext = Activity.ActivityContext;
  VIEWER_TYPES = {
    PDFJS: 0,
    IMAGE: 1
  };
  return FileViewerInterfaceController = (function() {
    function FileViewerInterfaceController(viewerType) {
      this._handleMessageFromChild = __bind(this._handleMessageFromChild, this);
      this._getIframeQuery = __bind(this._getIframeQuery, this);
      this._preparePdfJsInterface = __bind(this._preparePdfJsInterface, this);
      this.dispatchEvent = __bind(this.dispatchEvent, this);
      this._notifyEventsTriggered = __bind(this._notifyEventsTriggered, this);
      this.registerEventsCallbacks = __bind(this.registerEventsCallbacks, this);
      this._eventsHandler = null;
      this._type = this._setViewerType(viewerType);
      switch (this._type) {
        case VIEWER_TYPES.PDFJS:
          this._preparePdfJsInterface(viewerType);
      }
    }

    FileViewerInterfaceController.prototype._setViewerType = function(viewerType) {
      switch (viewerType) {
        case ActivityContext.BROWSE_FILE_VIEWER || ActivityContext.BROWSE_LIGHTBOX || ActivityContext.SHARED_LINK_VIEW || ActivityContext.SHARED_LINK_LIGHTBOX:
          return VIEWER_TYPES.PDFJS;
        default:
          return null;
      }
    };

    FileViewerInterfaceController.prototype.registerEventsCallbacks = function(callback) {
      return this._eventsHandler = callback;
    };

    FileViewerInterfaceController.prototype._notifyEventsTriggered = function(eventName, data) {
      return typeof this._eventsHandler === "function" ? this._eventsHandler(eventName, data) : void 0;
    };

    FileViewerInterfaceController.prototype.dispatchEvent = function(eventName, data) {
      switch (this._type) {
        case VIEWER_TYPES.PDFJS:
          return this._frameMessenger.postMessageToChildren(eventName, data);
      }
    };

    FileViewerInterfaceController.prototype._preparePdfJsInterface = function(viewerType) {
      this._frameMessenger = new FrameMessenger();
      this._frameMessenger.configureChildMessaging(this._getIframeQuery(viewerType), $j.proxy(this._handleMessageFromChild, this), ["annotation-hidden", "annotation-placed", "annotation-start-drag", "annotation-end-drag"]);
      return this._frameMessenger.startListening();
    };

    FileViewerInterfaceController.prototype._getIframeQuery = function(viewerType) {
      switch (viewerType) {
        case ActivityContext.BROWSE_FILE_VIEWER || ActivityContext.BROWSE_LIGHTBOX:
          return ".preview-content-container > iframe";
        case ActivityContext.SHARED_LINK_VIEW || ActivityContext.SHARED_LINK_LIGHTBOX:
          return ".preview-box iframe";
        default:
          return null;
      }
    };

    FileViewerInterfaceController.prototype._handleMessageFromChild = function(messageJson) {
      return typeof this._notifyEventsTriggered === "function" ? this._notifyEventsTriggered(messageJson.action, messageJson.parameters) : void 0;
    };

    return FileViewerInterfaceController;

  })();
});

//# sourceMappingURL=file_viewer_interface_controller.map
