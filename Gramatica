Leyenda:

PROGR: Estructura Programa Principal
ESTRUC: Estructura Subprograma
DEC : Declaracion de variables
TIPO: Tipo de variables  
LISTIDENT: Lista de Identificadores
INSTR : Intruccion del programa
ASSIGN : Asignacion
SEC: Secuenciacion
ENTR: Entrada
SAL: Salida
CONDIC: Condicional


Gramatica:

PROGR -> ESTRUC

ESTRUC -> { DEC | INSTR }
	| { INSTR}

DEC -> DEC TIPO LISTIDENT 
	| TIPO LISTIDENT
TIPO -> !

	| %
	| @

LISTIDENT -> LISTIDENT IDENTIFICADOR 
			| IDENTIFICADOR 

INSTR -> ASSIGN
	| SEC
	| ENTR
	| SAL
	| CONDIC
	| ITERIND
	| ITERDET
	| INCOR
	| ESTRUCT

ASSIGN -> IDENTIFICADOR  = EXPR

SEC -> SEC ; INSTR
	| INSTR

ENTR -> read identificador

SAL -> write EXPR

CONDIC -> ( EXPR ? INSTR )
	| ( EXPR ? INSTR : INSTR) 

ITERIND -> [ EXPR | INSTR]

ITERDET -> [ EXPR .. EXPR | INSTR]
ITERDET -> [ identificador : EXPR .. EXPR | INSTR]
INCOR -> { LISTADEC | INSTR}
INCOR -> { INSTR }
LISTADEC -> LISTADEC DEC
EXPR -> EXPRARIT
EXPR -> EXPRBOOL
EXPR -> EXPRRELAC
EXPR -> EXPRLIENZ
EXPRARIT -> numero + numero
EXPRARIT -> numero - numero
EXPRARIT -> numero * numero
EXPRARIT -> numero / numero
EXPRARIT -> numero % numero
EXPRARIT -> - numero
EXPRBOOL -> true /\ false
EXPRBOOL -> false /\ true
EXPRBOOL -> true \/ false
EXPRBOOL -> false \/ true
EXPRBOOL -> ^true
EXPRBOOL -> ^false
EXPRRELAC -> EXPRARIT operador EXPRARIT
EXPRRELAC -> EXPRBOOL operador EXPRBOOL
EXPRRELAC -> EXPRLIENZ = EXPRLIENZ
EXPRRELAC -> EXPRLIENZ /= EXPRLIENZ
EXPRLIENZ -> CANVAS & CANVAS
EXPRLIENZ -> CANVAS ~ CANVAS
EXPRLIENZ -> $ CANVAS
EXPRLIENZ -> CANVAS '
COMMENT -> {- blabla -} -> falta agregar al parser