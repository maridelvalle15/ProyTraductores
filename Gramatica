Gramatica
ESTRUC -> { DEC | INSTR }
ESTRUC -> { INSTR}
DEC -> DEC TIPO LISTIDENT
DEC -> lambda (?)
TIPO -> tipo
LISTIDENT -> identificador
INSTR -> ASIGN
INSTR -> SEC
INSTR -> ENTR
INSTR -> SAL
INSTR -> CONDIC
INSTR -> ITERIND
INSTR -> ITERDET
INSTR -> INCOR
ASIGN -> identificador = EXPR
SEC -> SEC INSTR
ENTR -> read identificador
SAL -> write EXPR
CONDIC -> ( EXPR ? INSTR )
CONDIC -> ( EXPR ? INSTR : INSTR) 
ITERIND -> [ EXPR | INSTR]
ITERDET -> [ EXPR .. EXPR | INSTR]
ITERDET -> [ identificador : EXPR .. EXPR | INSTR]
INCOR -> { LISTADEC | INSTR}
INCOR -> { INSTR }
EXPR -> numero + numero
EXPR -> numero - numero
EXPR -> numero * numero
EXPR -> numero / numero
EXPR -> numero % numero
EXPR -> - numero
EXPR -> true /\ false
EXPR -> false /\ true
EXPR -> true \/ false
EXPR -> false \/ true
EXPR -> ^true
EXPR -> ^false
COMENT -> {- blabla -}