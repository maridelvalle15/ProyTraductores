El análisis lexicográfico separa los componentes léxicos (tokens) presentes en los símbolos fuentes de un programa. Recibe un string y convierte la cadena en cadena de símbolos (tokens). A efectos del proyecto, se toman los string que "nos importan" y los convierten en tokens, a cada uno se le da un nombre que lo identifica. La primera estapa del proyecto se encargó de imprimir los tokens. 

Un analizador sintáctico (o parser) es una de las partes de un compilador que transforma su entrada en un árbol de derivación. El análisis sintáctico convierte el texto de entrada en otras estructuras (comúnmente árboles), que son más útiles para el posterior análisis y capturan la jerarquía implícita de la entrada. A efectos del proyecto, se toma la salida del lexer y se implementó la gramática correspondiente al lenguaje. La segunda etapa del proyecto se encargó de imprimir el árbol sintáctico de derivación.

El análisis de contexto determina si el programa tiene sentido. Esto es, por ejemplo, que las variables hayan sido declaradas o que los tipos coincidan, y sale el árbol decorado. Esto es lo que se necesita para ejecutar. A efectos del proyecto, luego de crear el analizador sintáctico, se crea la tabla de símbolos y se realiza el chequeo de tipos. Se verifica que las variables utilizadas estén correctamente declaradas. La tercera etapa del proyecto se encargó de imprimir la tabla de símbolos.

Finalmente, si el programa es correcto se ejecuta. Ya está el intérprete y se realizan los chequeos dinámicos. En este punto simplemente se ejecutan las instrucciones del programa. A efectos del proyecto, simplemente había que evaluar las operaciones que se realizan y ejecutar. La cuarta etapa del proyecto se encargó de imprimir las intrucciones "write"