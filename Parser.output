

-------- Grammar --------

rule 1 S: ESTRUCT
rule 2 ESTRUCT: LCURLY DEC PIPE INSTR RCURLY
rule 3 ESTRUCT: LCURLY INSTR RCURLY
rule 4 DEC: DEC TIPO LISTIDENT
rule 5 DEC: TIPO LISTIDENT
rule 6 TIPO: EXCLAMATION_MARK
rule 7 TIPO: PERCENT
rule 8 TIPO: AT
rule 9 LISTIDENT: LISTIDENT VARIABLE
rule 10 LISTIDENT: VARIABLE
rule 11 VARIABLE: IDENTIFIER
rule 12 INSTR: INSTR SEMI_COLON INSTR
rule 13 INSTR: ASSIGN
rule 14 INSTR: READ VARIABLE
rule 15 INSTR: WRITE EXPR
rule 16 INSTR: CONDIC
rule 17 INSTR: ITERIND
rule 18 INSTR: ITERDET
rule 19 INSTR: ESTRUCT
rule 20 ASSIGN: VARIABLE EQUAL EXPR
rule 21 CONDIC: LPARENTHESIS EXPR INTERROGATION_MARK INSTR RPARENTHESIS
rule 22 CONDIC: LPARENTHESIS EXPR INTERROGATION_MARK INSTR COLON INSTR RPARENTHESIS
rule 23 ITERIND: LBRACKET EXPR PIPE INSTR RBRACKET
rule 24 ITERDET: LBRACKET EXPR DOUBLE_DOT EXPR PIPE INSTR RBRACKET
rule 25 ITERDET: LBRACKET VARIABLE COLON EXPR DOUBLE_DOT EXPR PIPE INSTR RBRACKET
rule 26 EXPR: NUM
rule 27 EXPR: BOOL
rule 28 EXPR: LIEN
rule 29 EXPR: VARIABLE
rule 30 EXPR: EXPR PLUS EXPR
rule 31 EXPR: EXPR MINUS EXPR
rule 32 EXPR: EXPR MULTIPLY EXPR
rule 33 EXPR: EXPR DIVISION EXPR
rule 34 EXPR: EXPR PERCENT EXPR
rule 35 EXPR: MINUS EXPR
rule 36 EXPR: LPARENTHESIS EXPR RPARENTHESIS
rule 37 EXPR: EXPR AND EXPR
rule 38 EXPR: EXPR OR EXPR
rule 39 EXPR: NOT EXPR
rule 40 EXPR: EXPR AMPERSAND EXPR
rule 41 EXPR: EXPR VIRGUILE EXPR
rule 42 EXPR: DOLLAR EXPR
rule 43 EXPR: EXPR APOSTROPHE
rule 44 EXPR: EXPR LESS EXPR
rule 45 EXPR: EXPR LESS_EQUAL EXPR
rule 46 EXPR: EXPR MORE EXPR
rule 47 EXPR: EXPR MORE_EQUAL EXPR
rule 48 EXPR: EXPR EQUAL EXPR
rule 49 EXPR: EXPR INEQUAL EXPR
rule 50 NUM: NUMBER
rule 51 BOOL: TRUE
rule 52 BOOL: FALSE
rule 53 LIEN: CANVAS
rule 54 LIEN: EMPTY_CANVAS

------- Symbols -------

**Nonterminals, with rules where they appear

  $start (42)
    on right: 
    on left : 
  S (43)
    on right: 
    on left : 1
  ESTRUCT (44)
    on right: 1 19
    on left : 2 3
  DEC (45)
    on right: 2 4
    on left : 4 5
  INSTR (46)
    on right: 2 3 12 21 22 23 24 25
    on left : 12 13 14 15 16 17 18 19
  TIPO (47)
    on right: 4 5
    on left : 6 7 8
  LISTIDENT (48)
    on right: 4 5 9
    on left : 9 10
  VARIABLE (49)
    on right: 9 10 14 20 25 29
    on left : 11
  ASSIGN (50)
    on right: 13
    on left : 20
  EXPR (51)
    on right: 15 20 21 22 23 24 25 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49
    on left : 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49
  CONDIC (52)
    on right: 16
    on left : 21 22
  ITERIND (53)
    on right: 17
    on left : 23
  ITERDET (54)
    on right: 18
    on left : 24 25
  NUM (55)
    on right: 26
    on left : 50
  BOOL (56)
    on right: 27
    on left : 51 52
  LIEN (57)
    on right: 28
    on left : 53 54

**Terminals, with rules where they appear

  $end (0) 
  error (1) 
  SEMI_COLON (2) 12
  INTERROGATION_MARK (3) 21 22
  COLON (4) 22 25
  DOUBLE_DOT (5) 24 25
  PIPE (6) 2 23 24 25
  MINUS_UNARY (7) 
  MULTIPLY (8) 32
  DIVISION (9) 33
  PERCENT (10) 7 34
  PLUS (11) 30
  MINUS (12) 31 35
  LESS_EQUAL (13) 45
  LESS (14) 44
  MORE (15) 46
  MORE_EQUAL (16) 47
  EQUAL (17) 20 48
  INEQUAL (18) 49
  NOT (19) 39
  AND (20) 37
  OR (21) 38
  APOSTROPHE (22) 43
  DOLLAR (23) 42
  VIRGUILE (24) 41
  AMPERSAND (25) 40
  TRUE (26) 51
  FALSE (27) 52
  READ (28) 14
  WRITE (29) 15
  IDENTIFIER (30) 11
  NUMBER (31) 50
  EMPTY_CANVAS (32) 54
  CANVAS (33) 53
  EXCLAMATION_MARK (34) 6
  AT (35) 8
  LCURLY (36) 2 3
  RCURLY (37) 2 3
  LBRACKET (38) 23 24 25
  RBRACKET (39) 23 24 25
  LPARENTHESIS (40) 21 22 36
  RPARENTHESIS (41) 21 22 36

--------- State ---------

state 0


  LCURLY        shift, and go to state 3

  S             go to state 1
  ESTRUCT       go to state 2

state 1


  $end          shift, and go to state 4


state 2

   1) S : ESTRUCT _

  $default      reduce using rule 1 (S)


state 3

   2) ESTRUCT : LCURLY _ DEC PIPE INSTR RCURLY
   3) ESTRUCT : LCURLY _ INSTR RCURLY

  PERCENT       shift, and go to state 9
  READ          shift, and go to state 13
  WRITE         shift, and go to state 14
  IDENTIFIER    shift, and go to state 11
  EXCLAMATION_MARK  shift, and go to state 8
  AT            shift, and go to state 10
  LCURLY        shift, and go to state 3
  LBRACKET      shift, and go to state 21
  LPARENTHESIS  shift, and go to state 20

  DEC           go to state 5
  INSTR         go to state 6
  TIPO          go to state 7
  ASSIGN        go to state 12
  CONDIC        go to state 15
  ITERIND       go to state 16
  ITERDET       go to state 17
  ESTRUCT       go to state 18
  VARIABLE      go to state 19

state 4


  $end          shift, and go to state 22


state 5

   2) ESTRUCT : LCURLY DEC _ PIPE INSTR RCURLY
   4) DEC : DEC _ TIPO LISTIDENT

  PIPE          shift, and go to state 23
  PERCENT       shift, and go to state 9
  EXCLAMATION_MARK  shift, and go to state 8
  AT            shift, and go to state 10

  TIPO          go to state 24

state 6

   3) ESTRUCT : LCURLY INSTR _ RCURLY
  12) INSTR : INSTR _ SEMI_COLON INSTR

  SEMI_COLON    shift, and go to state 26
  RCURLY        shift, and go to state 25


state 7

   5) DEC : TIPO _ LISTIDENT

  IDENTIFIER    shift, and go to state 11

  LISTIDENT     go to state 27
  VARIABLE      go to state 28

state 8

   6) TIPO : EXCLAMATION_MARK _

  $default      reduce using rule 6 (TIPO)


state 9

   7) TIPO : PERCENT _

  $default      reduce using rule 7 (TIPO)


state 10

   8) TIPO : AT _

  $default      reduce using rule 8 (TIPO)


state 11

  11) VARIABLE : IDENTIFIER _

  $default      reduce using rule 11 (VARIABLE)


state 12

  13) INSTR : ASSIGN _

  $default      reduce using rule 13 (INSTR)


state 13

  14) INSTR : READ _ VARIABLE

  IDENTIFIER    shift, and go to state 11

  VARIABLE      go to state 29

state 14

  15) INSTR : WRITE _ EXPR

  MINUS         shift, and go to state 35
  NOT           shift, and go to state 37
  DOLLAR        shift, and go to state 38
  TRUE          shift, and go to state 40
  FALSE         shift, and go to state 41
  IDENTIFIER    shift, and go to state 11
  NUMBER        shift, and go to state 39
  EMPTY_CANVAS  shift, and go to state 43
  CANVAS        shift, and go to state 42
  LPARENTHESIS  shift, and go to state 36

  EXPR          go to state 30
  NUM           go to state 31
  BOOL          go to state 32
  LIEN          go to state 33
  VARIABLE      go to state 34

state 15

  16) INSTR : CONDIC _

  $default      reduce using rule 16 (INSTR)


state 16

  17) INSTR : ITERIND _

  $default      reduce using rule 17 (INSTR)


state 17

  18) INSTR : ITERDET _

  $default      reduce using rule 18 (INSTR)


state 18

  19) INSTR : ESTRUCT _

  $default      reduce using rule 19 (INSTR)


state 19

  20) ASSIGN : VARIABLE _ EQUAL EXPR

  EQUAL         shift, and go to state 44


state 20

  21) CONDIC : LPARENTHESIS _ EXPR INTERROGATION_MARK INSTR RPARENTHESIS
  22) CONDIC : LPARENTHESIS _ EXPR INTERROGATION_MARK INSTR COLON INSTR RPARENTHESIS

  MINUS         shift, and go to state 35
  NOT           shift, and go to state 37
  DOLLAR        shift, and go to state 38
  TRUE          shift, and go to state 40
  FALSE         shift, and go to state 41
  IDENTIFIER    shift, and go to state 11
  NUMBER        shift, and go to state 39
  EMPTY_CANVAS  shift, and go to state 43
  CANVAS        shift, and go to state 42
  LPARENTHESIS  shift, and go to state 36

  EXPR          go to state 45
  NUM           go to state 31
  BOOL          go to state 32
  LIEN          go to state 33
  VARIABLE      go to state 34

state 21

  23) ITERIND : LBRACKET _ EXPR PIPE INSTR RBRACKET
  24) ITERDET : LBRACKET _ EXPR DOUBLE_DOT EXPR PIPE INSTR RBRACKET
  25) ITERDET : LBRACKET _ VARIABLE COLON EXPR DOUBLE_DOT EXPR PIPE INSTR RBRACKET

  MINUS         shift, and go to state 35
  NOT           shift, and go to state 37
  DOLLAR        shift, and go to state 38
  TRUE          shift, and go to state 40
  FALSE         shift, and go to state 41
  IDENTIFIER    shift, and go to state 11
  NUMBER        shift, and go to state 39
  EMPTY_CANVAS  shift, and go to state 43
  CANVAS        shift, and go to state 42
  LPARENTHESIS  shift, and go to state 36

  EXPR          go to state 46
  VARIABLE      go to state 47
  NUM           go to state 31
  BOOL          go to state 32
  LIEN          go to state 33

state 22


  $default      accept


state 23

   2) ESTRUCT : LCURLY DEC PIPE _ INSTR RCURLY

  READ          shift, and go to state 13
  WRITE         shift, and go to state 14
  IDENTIFIER    shift, and go to state 11
  LCURLY        shift, and go to state 3
  LBRACKET      shift, and go to state 21
  LPARENTHESIS  shift, and go to state 20

  INSTR         go to state 48
  ASSIGN        go to state 12
  CONDIC        go to state 15
  ITERIND       go to state 16
  ITERDET       go to state 17
  ESTRUCT       go to state 18
  VARIABLE      go to state 19

state 24

   4) DEC : DEC TIPO _ LISTIDENT

  IDENTIFIER    shift, and go to state 11

  LISTIDENT     go to state 49
  VARIABLE      go to state 28

state 25

   3) ESTRUCT : LCURLY INSTR RCURLY _

  $default      reduce using rule 3 (ESTRUCT)


state 26

  12) INSTR : INSTR SEMI_COLON _ INSTR

  READ          shift, and go to state 13
  WRITE         shift, and go to state 14
  IDENTIFIER    shift, and go to state 11
  LCURLY        shift, and go to state 3
  LBRACKET      shift, and go to state 21
  LPARENTHESIS  shift, and go to state 20

  INSTR         go to state 50
  ASSIGN        go to state 12
  CONDIC        go to state 15
  ITERIND       go to state 16
  ITERDET       go to state 17
  ESTRUCT       go to state 18
  VARIABLE      go to state 19

state 27

   5) DEC : TIPO LISTIDENT _
   9) LISTIDENT : LISTIDENT _ VARIABLE

  IDENTIFIER    shift, and go to state 11
  $default      reduce using rule 5 (DEC)

  VARIABLE      go to state 51

state 28

  10) LISTIDENT : VARIABLE _

  $default      reduce using rule 10 (LISTIDENT)


state 29

  14) INSTR : READ VARIABLE _

  $default      reduce using rule 14 (INSTR)


state 30

  15) INSTR : WRITE EXPR _
  30) EXPR : EXPR _ PLUS EXPR
  31) EXPR : EXPR _ MINUS EXPR
  32) EXPR : EXPR _ MULTIPLY EXPR
  33) EXPR : EXPR _ DIVISION EXPR
  34) EXPR : EXPR _ PERCENT EXPR
  37) EXPR : EXPR _ AND EXPR
  38) EXPR : EXPR _ OR EXPR
  40) EXPR : EXPR _ AMPERSAND EXPR
  41) EXPR : EXPR _ VIRGUILE EXPR
  43) EXPR : EXPR _ APOSTROPHE
  44) EXPR : EXPR _ LESS EXPR
  45) EXPR : EXPR _ LESS_EQUAL EXPR
  46) EXPR : EXPR _ MORE EXPR
  47) EXPR : EXPR _ MORE_EQUAL EXPR
  48) EXPR : EXPR _ EQUAL EXPR
  49) EXPR : EXPR _ INEQUAL EXPR

  MULTIPLY      shift, and go to state 54
  DIVISION      shift, and go to state 55
  PERCENT       shift, and go to state 56
  PLUS          shift, and go to state 52
  MINUS         shift, and go to state 53
  LESS_EQUAL    shift, and go to state 63
  LESS          shift, and go to state 62
  MORE          shift, and go to state 64
  MORE_EQUAL    shift, and go to state 65
  EQUAL         shift, and go to state 66
  INEQUAL       shift, and go to state 67
  AND           shift, and go to state 57
  OR            shift, and go to state 58
  APOSTROPHE    shift, and go to state 61
  VIRGUILE      shift, and go to state 60
  AMPERSAND     shift, and go to state 59
  $default      reduce using rule 15 (INSTR)


state 31

  26) EXPR : NUM _

  $default      reduce using rule 26 (EXPR)


state 32

  27) EXPR : BOOL _

  $default      reduce using rule 27 (EXPR)


state 33

  28) EXPR : LIEN _

  $default      reduce using rule 28 (EXPR)


state 34

  29) EXPR : VARIABLE _

  $default      reduce using rule 29 (EXPR)


state 35

  35) EXPR : MINUS _ EXPR

  MINUS         shift, and go to state 35
  NOT           shift, and go to state 37
  DOLLAR        shift, and go to state 38
  TRUE          shift, and go to state 40
  FALSE         shift, and go to state 41
  IDENTIFIER    shift, and go to state 11
  NUMBER        shift, and go to state 39
  EMPTY_CANVAS  shift, and go to state 43
  CANVAS        shift, and go to state 42
  LPARENTHESIS  shift, and go to state 36

  NUM           go to state 31
  BOOL          go to state 32
  LIEN          go to state 33
  VARIABLE      go to state 34
  EXPR          go to state 68

state 36

  36) EXPR : LPARENTHESIS _ EXPR RPARENTHESIS

  MINUS         shift, and go to state 35
  NOT           shift, and go to state 37
  DOLLAR        shift, and go to state 38
  TRUE          shift, and go to state 40
  FALSE         shift, and go to state 41
  IDENTIFIER    shift, and go to state 11
  NUMBER        shift, and go to state 39
  EMPTY_CANVAS  shift, and go to state 43
  CANVAS        shift, and go to state 42
  LPARENTHESIS  shift, and go to state 36

  NUM           go to state 31
  BOOL          go to state 32
  LIEN          go to state 33
  VARIABLE      go to state 34
  EXPR          go to state 69

state 37

  39) EXPR : NOT _ EXPR

  MINUS         shift, and go to state 35
  NOT           shift, and go to state 37
  DOLLAR        shift, and go to state 38
  TRUE          shift, and go to state 40
  FALSE         shift, and go to state 41
  IDENTIFIER    shift, and go to state 11
  NUMBER        shift, and go to state 39
  EMPTY_CANVAS  shift, and go to state 43
  CANVAS        shift, and go to state 42
  LPARENTHESIS  shift, and go to state 36

  NUM           go to state 31
  BOOL          go to state 32
  LIEN          go to state 33
  VARIABLE      go to state 34
  EXPR          go to state 70

state 38

  42) EXPR : DOLLAR _ EXPR

  MINUS         shift, and go to state 35
  NOT           shift, and go to state 37
  DOLLAR        shift, and go to state 38
  TRUE          shift, and go to state 40
  FALSE         shift, and go to state 41
  IDENTIFIER    shift, and go to state 11
  NUMBER        shift, and go to state 39
  EMPTY_CANVAS  shift, and go to state 43
  CANVAS        shift, and go to state 42
  LPARENTHESIS  shift, and go to state 36

  NUM           go to state 31
  BOOL          go to state 32
  LIEN          go to state 33
  VARIABLE      go to state 34
  EXPR          go to state 71

state 39

  50) NUM : NUMBER _

  $default      reduce using rule 50 (NUM)


state 40

  51) BOOL : TRUE _

  $default      reduce using rule 51 (BOOL)


state 41

  52) BOOL : FALSE _

  $default      reduce using rule 52 (BOOL)


state 42

  53) LIEN : CANVAS _

  $default      reduce using rule 53 (LIEN)


state 43

  54) LIEN : EMPTY_CANVAS _

  $default      reduce using rule 54 (LIEN)


state 44

  20) ASSIGN : VARIABLE EQUAL _ EXPR

  MINUS         shift, and go to state 35
  NOT           shift, and go to state 37
  DOLLAR        shift, and go to state 38
  TRUE          shift, and go to state 40
  FALSE         shift, and go to state 41
  IDENTIFIER    shift, and go to state 11
  NUMBER        shift, and go to state 39
  EMPTY_CANVAS  shift, and go to state 43
  CANVAS        shift, and go to state 42
  LPARENTHESIS  shift, and go to state 36

  EXPR          go to state 72
  NUM           go to state 31
  BOOL          go to state 32
  LIEN          go to state 33
  VARIABLE      go to state 34

state 45

  21) CONDIC : LPARENTHESIS EXPR _ INTERROGATION_MARK INSTR RPARENTHESIS
  22) CONDIC : LPARENTHESIS EXPR _ INTERROGATION_MARK INSTR COLON INSTR RPARENTHESIS
  30) EXPR : EXPR _ PLUS EXPR
  31) EXPR : EXPR _ MINUS EXPR
  32) EXPR : EXPR _ MULTIPLY EXPR
  33) EXPR : EXPR _ DIVISION EXPR
  34) EXPR : EXPR _ PERCENT EXPR
  37) EXPR : EXPR _ AND EXPR
  38) EXPR : EXPR _ OR EXPR
  40) EXPR : EXPR _ AMPERSAND EXPR
  41) EXPR : EXPR _ VIRGUILE EXPR
  43) EXPR : EXPR _ APOSTROPHE
  44) EXPR : EXPR _ LESS EXPR
  45) EXPR : EXPR _ LESS_EQUAL EXPR
  46) EXPR : EXPR _ MORE EXPR
  47) EXPR : EXPR _ MORE_EQUAL EXPR
  48) EXPR : EXPR _ EQUAL EXPR
  49) EXPR : EXPR _ INEQUAL EXPR

  INTERROGATION_MARK  shift, and go to state 73
  MULTIPLY      shift, and go to state 54
  DIVISION      shift, and go to state 55
  PERCENT       shift, and go to state 56
  PLUS          shift, and go to state 52
  MINUS         shift, and go to state 53
  LESS_EQUAL    shift, and go to state 63
  LESS          shift, and go to state 62
  MORE          shift, and go to state 64
  MORE_EQUAL    shift, and go to state 65
  EQUAL         shift, and go to state 66
  INEQUAL       shift, and go to state 67
  AND           shift, and go to state 57
  OR            shift, and go to state 58
  APOSTROPHE    shift, and go to state 61
  VIRGUILE      shift, and go to state 60
  AMPERSAND     shift, and go to state 59


state 46

  23) ITERIND : LBRACKET EXPR _ PIPE INSTR RBRACKET
  24) ITERDET : LBRACKET EXPR _ DOUBLE_DOT EXPR PIPE INSTR RBRACKET
  30) EXPR : EXPR _ PLUS EXPR
  31) EXPR : EXPR _ MINUS EXPR
  32) EXPR : EXPR _ MULTIPLY EXPR
  33) EXPR : EXPR _ DIVISION EXPR
  34) EXPR : EXPR _ PERCENT EXPR
  37) EXPR : EXPR _ AND EXPR
  38) EXPR : EXPR _ OR EXPR
  40) EXPR : EXPR _ AMPERSAND EXPR
  41) EXPR : EXPR _ VIRGUILE EXPR
  43) EXPR : EXPR _ APOSTROPHE
  44) EXPR : EXPR _ LESS EXPR
  45) EXPR : EXPR _ LESS_EQUAL EXPR
  46) EXPR : EXPR _ MORE EXPR
  47) EXPR : EXPR _ MORE_EQUAL EXPR
  48) EXPR : EXPR _ EQUAL EXPR
  49) EXPR : EXPR _ INEQUAL EXPR

  DOUBLE_DOT    shift, and go to state 75
  PIPE          shift, and go to state 74
  MULTIPLY      shift, and go to state 54
  DIVISION      shift, and go to state 55
  PERCENT       shift, and go to state 56
  PLUS          shift, and go to state 52
  MINUS         shift, and go to state 53
  LESS_EQUAL    shift, and go to state 63
  LESS          shift, and go to state 62
  MORE          shift, and go to state 64
  MORE_EQUAL    shift, and go to state 65
  EQUAL         shift, and go to state 66
  INEQUAL       shift, and go to state 67
  AND           shift, and go to state 57
  OR            shift, and go to state 58
  APOSTROPHE    shift, and go to state 61
  VIRGUILE      shift, and go to state 60
  AMPERSAND     shift, and go to state 59


state 47

  25) ITERDET : LBRACKET VARIABLE _ COLON EXPR DOUBLE_DOT EXPR PIPE INSTR RBRACKET
  29) EXPR : VARIABLE _

  COLON         shift, and go to state 76
  $default      reduce using rule 29 (EXPR)


state 48

   2) ESTRUCT : LCURLY DEC PIPE INSTR _ RCURLY
  12) INSTR : INSTR _ SEMI_COLON INSTR

  SEMI_COLON    shift, and go to state 26
  RCURLY        shift, and go to state 77


state 49

   4) DEC : DEC TIPO LISTIDENT _
   9) LISTIDENT : LISTIDENT _ VARIABLE

  IDENTIFIER    shift, and go to state 11
  $default      reduce using rule 4 (DEC)

  VARIABLE      go to state 51

state 50

  12) INSTR : INSTR _ SEMI_COLON INSTR
  12) INSTR : INSTR SEMI_COLON INSTR _

  $default      reduce using rule 12 (INSTR)


state 51

   9) LISTIDENT : LISTIDENT VARIABLE _

  $default      reduce using rule 9 (LISTIDENT)


state 52

  30) EXPR : EXPR PLUS _ EXPR

  MINUS         shift, and go to state 35
  NOT           shift, and go to state 37
  DOLLAR        shift, and go to state 38
  TRUE          shift, and go to state 40
  FALSE         shift, and go to state 41
  IDENTIFIER    shift, and go to state 11
  NUMBER        shift, and go to state 39
  EMPTY_CANVAS  shift, and go to state 43
  CANVAS        shift, and go to state 42
  LPARENTHESIS  shift, and go to state 36

  NUM           go to state 31
  BOOL          go to state 32
  LIEN          go to state 33
  VARIABLE      go to state 34
  EXPR          go to state 78

state 53

  31) EXPR : EXPR MINUS _ EXPR

  MINUS         shift, and go to state 35
  NOT           shift, and go to state 37
  DOLLAR        shift, and go to state 38
  TRUE          shift, and go to state 40
  FALSE         shift, and go to state 41
  IDENTIFIER    shift, and go to state 11
  NUMBER        shift, and go to state 39
  EMPTY_CANVAS  shift, and go to state 43
  CANVAS        shift, and go to state 42
  LPARENTHESIS  shift, and go to state 36

  NUM           go to state 31
  BOOL          go to state 32
  LIEN          go to state 33
  VARIABLE      go to state 34
  EXPR          go to state 79

state 54

  32) EXPR : EXPR MULTIPLY _ EXPR

  MINUS         shift, and go to state 35
  NOT           shift, and go to state 37
  DOLLAR        shift, and go to state 38
  TRUE          shift, and go to state 40
  FALSE         shift, and go to state 41
  IDENTIFIER    shift, and go to state 11
  NUMBER        shift, and go to state 39
  EMPTY_CANVAS  shift, and go to state 43
  CANVAS        shift, and go to state 42
  LPARENTHESIS  shift, and go to state 36

  NUM           go to state 31
  BOOL          go to state 32
  LIEN          go to state 33
  VARIABLE      go to state 34
  EXPR          go to state 80

state 55

  33) EXPR : EXPR DIVISION _ EXPR

  MINUS         shift, and go to state 35
  NOT           shift, and go to state 37
  DOLLAR        shift, and go to state 38
  TRUE          shift, and go to state 40
  FALSE         shift, and go to state 41
  IDENTIFIER    shift, and go to state 11
  NUMBER        shift, and go to state 39
  EMPTY_CANVAS  shift, and go to state 43
  CANVAS        shift, and go to state 42
  LPARENTHESIS  shift, and go to state 36

  NUM           go to state 31
  BOOL          go to state 32
  LIEN          go to state 33
  VARIABLE      go to state 34
  EXPR          go to state 81

state 56

  34) EXPR : EXPR PERCENT _ EXPR

  MINUS         shift, and go to state 35
  NOT           shift, and go to state 37
  DOLLAR        shift, and go to state 38
  TRUE          shift, and go to state 40
  FALSE         shift, and go to state 41
  IDENTIFIER    shift, and go to state 11
  NUMBER        shift, and go to state 39
  EMPTY_CANVAS  shift, and go to state 43
  CANVAS        shift, and go to state 42
  LPARENTHESIS  shift, and go to state 36

  NUM           go to state 31
  BOOL          go to state 32
  LIEN          go to state 33
  VARIABLE      go to state 34
  EXPR          go to state 82

state 57

  37) EXPR : EXPR AND _ EXPR

  MINUS         shift, and go to state 35
  NOT           shift, and go to state 37
  DOLLAR        shift, and go to state 38
  TRUE          shift, and go to state 40
  FALSE         shift, and go to state 41
  IDENTIFIER    shift, and go to state 11
  NUMBER        shift, and go to state 39
  EMPTY_CANVAS  shift, and go to state 43
  CANVAS        shift, and go to state 42
  LPARENTHESIS  shift, and go to state 36

  NUM           go to state 31
  BOOL          go to state 32
  LIEN          go to state 33
  VARIABLE      go to state 34
  EXPR          go to state 83

state 58

  38) EXPR : EXPR OR _ EXPR

  MINUS         shift, and go to state 35
  NOT           shift, and go to state 37
  DOLLAR        shift, and go to state 38
  TRUE          shift, and go to state 40
  FALSE         shift, and go to state 41
  IDENTIFIER    shift, and go to state 11
  NUMBER        shift, and go to state 39
  EMPTY_CANVAS  shift, and go to state 43
  CANVAS        shift, and go to state 42
  LPARENTHESIS  shift, and go to state 36

  NUM           go to state 31
  BOOL          go to state 32
  LIEN          go to state 33
  VARIABLE      go to state 34
  EXPR          go to state 84

state 59

  40) EXPR : EXPR AMPERSAND _ EXPR

  MINUS         shift, and go to state 35
  NOT           shift, and go to state 37
  DOLLAR        shift, and go to state 38
  TRUE          shift, and go to state 40
  FALSE         shift, and go to state 41
  IDENTIFIER    shift, and go to state 11
  NUMBER        shift, and go to state 39
  EMPTY_CANVAS  shift, and go to state 43
  CANVAS        shift, and go to state 42
  LPARENTHESIS  shift, and go to state 36

  NUM           go to state 31
  BOOL          go to state 32
  LIEN          go to state 33
  VARIABLE      go to state 34
  EXPR          go to state 85

state 60

  41) EXPR : EXPR VIRGUILE _ EXPR

  MINUS         shift, and go to state 35
  NOT           shift, and go to state 37
  DOLLAR        shift, and go to state 38
  TRUE          shift, and go to state 40
  FALSE         shift, and go to state 41
  IDENTIFIER    shift, and go to state 11
  NUMBER        shift, and go to state 39
  EMPTY_CANVAS  shift, and go to state 43
  CANVAS        shift, and go to state 42
  LPARENTHESIS  shift, and go to state 36

  NUM           go to state 31
  BOOL          go to state 32
  LIEN          go to state 33
  VARIABLE      go to state 34
  EXPR          go to state 86

state 61

  43) EXPR : EXPR APOSTROPHE _

  $default      reduce using rule 43 (EXPR)


state 62

  44) EXPR : EXPR LESS _ EXPR

  MINUS         shift, and go to state 35
  NOT           shift, and go to state 37
  DOLLAR        shift, and go to state 38
  TRUE          shift, and go to state 40
  FALSE         shift, and go to state 41
  IDENTIFIER    shift, and go to state 11
  NUMBER        shift, and go to state 39
  EMPTY_CANVAS  shift, and go to state 43
  CANVAS        shift, and go to state 42
  LPARENTHESIS  shift, and go to state 36

  NUM           go to state 31
  BOOL          go to state 32
  LIEN          go to state 33
  VARIABLE      go to state 34
  EXPR          go to state 87

state 63

  45) EXPR : EXPR LESS_EQUAL _ EXPR

  MINUS         shift, and go to state 35
  NOT           shift, and go to state 37
  DOLLAR        shift, and go to state 38
  TRUE          shift, and go to state 40
  FALSE         shift, and go to state 41
  IDENTIFIER    shift, and go to state 11
  NUMBER        shift, and go to state 39
  EMPTY_CANVAS  shift, and go to state 43
  CANVAS        shift, and go to state 42
  LPARENTHESIS  shift, and go to state 36

  NUM           go to state 31
  BOOL          go to state 32
  LIEN          go to state 33
  VARIABLE      go to state 34
  EXPR          go to state 88

state 64

  46) EXPR : EXPR MORE _ EXPR

  MINUS         shift, and go to state 35
  NOT           shift, and go to state 37
  DOLLAR        shift, and go to state 38
  TRUE          shift, and go to state 40
  FALSE         shift, and go to state 41
  IDENTIFIER    shift, and go to state 11
  NUMBER        shift, and go to state 39
  EMPTY_CANVAS  shift, and go to state 43
  CANVAS        shift, and go to state 42
  LPARENTHESIS  shift, and go to state 36

  NUM           go to state 31
  BOOL          go to state 32
  LIEN          go to state 33
  VARIABLE      go to state 34
  EXPR          go to state 89

state 65

  47) EXPR : EXPR MORE_EQUAL _ EXPR

  MINUS         shift, and go to state 35
  NOT           shift, and go to state 37
  DOLLAR        shift, and go to state 38
  TRUE          shift, and go to state 40
  FALSE         shift, and go to state 41
  IDENTIFIER    shift, and go to state 11
  NUMBER        shift, and go to state 39
  EMPTY_CANVAS  shift, and go to state 43
  CANVAS        shift, and go to state 42
  LPARENTHESIS  shift, and go to state 36

  NUM           go to state 31
  BOOL          go to state 32
  LIEN          go to state 33
  VARIABLE      go to state 34
  EXPR          go to state 90

state 66

  48) EXPR : EXPR EQUAL _ EXPR

  MINUS         shift, and go to state 35
  NOT           shift, and go to state 37
  DOLLAR        shift, and go to state 38
  TRUE          shift, and go to state 40
  FALSE         shift, and go to state 41
  IDENTIFIER    shift, and go to state 11
  NUMBER        shift, and go to state 39
  EMPTY_CANVAS  shift, and go to state 43
  CANVAS        shift, and go to state 42
  LPARENTHESIS  shift, and go to state 36

  NUM           go to state 31
  BOOL          go to state 32
  LIEN          go to state 33
  VARIABLE      go to state 34
  EXPR          go to state 91

state 67

  49) EXPR : EXPR INEQUAL _ EXPR

  MINUS         shift, and go to state 35
  NOT           shift, and go to state 37
  DOLLAR        shift, and go to state 38
  TRUE          shift, and go to state 40
  FALSE         shift, and go to state 41
  IDENTIFIER    shift, and go to state 11
  NUMBER        shift, and go to state 39
  EMPTY_CANVAS  shift, and go to state 43
  CANVAS        shift, and go to state 42
  LPARENTHESIS  shift, and go to state 36

  NUM           go to state 31
  BOOL          go to state 32
  LIEN          go to state 33
  VARIABLE      go to state 34
  EXPR          go to state 92

state 68

  30) EXPR : EXPR _ PLUS EXPR
  31) EXPR : EXPR _ MINUS EXPR
  32) EXPR : EXPR _ MULTIPLY EXPR
  33) EXPR : EXPR _ DIVISION EXPR
  34) EXPR : EXPR _ PERCENT EXPR
  35) EXPR : MINUS EXPR _
  37) EXPR : EXPR _ AND EXPR
  38) EXPR : EXPR _ OR EXPR
  40) EXPR : EXPR _ AMPERSAND EXPR
  41) EXPR : EXPR _ VIRGUILE EXPR
  43) EXPR : EXPR _ APOSTROPHE
  44) EXPR : EXPR _ LESS EXPR
  45) EXPR : EXPR _ LESS_EQUAL EXPR
  46) EXPR : EXPR _ MORE EXPR
  47) EXPR : EXPR _ MORE_EQUAL EXPR
  48) EXPR : EXPR _ EQUAL EXPR
  49) EXPR : EXPR _ INEQUAL EXPR

  $default      reduce using rule 35 (EXPR)


state 69

  30) EXPR : EXPR _ PLUS EXPR
  31) EXPR : EXPR _ MINUS EXPR
  32) EXPR : EXPR _ MULTIPLY EXPR
  33) EXPR : EXPR _ DIVISION EXPR
  34) EXPR : EXPR _ PERCENT EXPR
  36) EXPR : LPARENTHESIS EXPR _ RPARENTHESIS
  37) EXPR : EXPR _ AND EXPR
  38) EXPR : EXPR _ OR EXPR
  40) EXPR : EXPR _ AMPERSAND EXPR
  41) EXPR : EXPR _ VIRGUILE EXPR
  43) EXPR : EXPR _ APOSTROPHE
  44) EXPR : EXPR _ LESS EXPR
  45) EXPR : EXPR _ LESS_EQUAL EXPR
  46) EXPR : EXPR _ MORE EXPR
  47) EXPR : EXPR _ MORE_EQUAL EXPR
  48) EXPR : EXPR _ EQUAL EXPR
  49) EXPR : EXPR _ INEQUAL EXPR

  MULTIPLY      shift, and go to state 54
  DIVISION      shift, and go to state 55
  PERCENT       shift, and go to state 56
  PLUS          shift, and go to state 52
  MINUS         shift, and go to state 53
  LESS_EQUAL    shift, and go to state 63
  LESS          shift, and go to state 62
  MORE          shift, and go to state 64
  MORE_EQUAL    shift, and go to state 65
  EQUAL         shift, and go to state 66
  INEQUAL       shift, and go to state 67
  AND           shift, and go to state 57
  OR            shift, and go to state 58
  APOSTROPHE    shift, and go to state 61
  VIRGUILE      shift, and go to state 60
  AMPERSAND     shift, and go to state 59
  RPARENTHESIS  shift, and go to state 93


state 70

  30) EXPR : EXPR _ PLUS EXPR
  31) EXPR : EXPR _ MINUS EXPR
  32) EXPR : EXPR _ MULTIPLY EXPR
  33) EXPR : EXPR _ DIVISION EXPR
  34) EXPR : EXPR _ PERCENT EXPR
  37) EXPR : EXPR _ AND EXPR
  38) EXPR : EXPR _ OR EXPR
  39) EXPR : NOT EXPR _
  40) EXPR : EXPR _ AMPERSAND EXPR
  41) EXPR : EXPR _ VIRGUILE EXPR
  43) EXPR : EXPR _ APOSTROPHE
  44) EXPR : EXPR _ LESS EXPR
  45) EXPR : EXPR _ LESS_EQUAL EXPR
  46) EXPR : EXPR _ MORE EXPR
  47) EXPR : EXPR _ MORE_EQUAL EXPR
  48) EXPR : EXPR _ EQUAL EXPR
  49) EXPR : EXPR _ INEQUAL EXPR

  MULTIPLY      shift, and go to state 54
  DIVISION      shift, and go to state 55
  PERCENT       shift, and go to state 56
  PLUS          shift, and go to state 52
  MINUS         shift, and go to state 53
  LESS_EQUAL    shift, and go to state 63
  LESS          shift, and go to state 62
  MORE          shift, and go to state 64
  MORE_EQUAL    shift, and go to state 65
  EQUAL         shift, and go to state 66
  INEQUAL       shift, and go to state 67
  $default      reduce using rule 39 (EXPR)


state 71

  30) EXPR : EXPR _ PLUS EXPR
  31) EXPR : EXPR _ MINUS EXPR
  32) EXPR : EXPR _ MULTIPLY EXPR
  33) EXPR : EXPR _ DIVISION EXPR
  34) EXPR : EXPR _ PERCENT EXPR
  37) EXPR : EXPR _ AND EXPR
  38) EXPR : EXPR _ OR EXPR
  40) EXPR : EXPR _ AMPERSAND EXPR
  41) EXPR : EXPR _ VIRGUILE EXPR
  42) EXPR : DOLLAR EXPR _
  43) EXPR : EXPR _ APOSTROPHE
  44) EXPR : EXPR _ LESS EXPR
  45) EXPR : EXPR _ LESS_EQUAL EXPR
  46) EXPR : EXPR _ MORE EXPR
  47) EXPR : EXPR _ MORE_EQUAL EXPR
  48) EXPR : EXPR _ EQUAL EXPR
  49) EXPR : EXPR _ INEQUAL EXPR

  MULTIPLY      shift, and go to state 54
  DIVISION      shift, and go to state 55
  PERCENT       shift, and go to state 56
  PLUS          shift, and go to state 52
  MINUS         shift, and go to state 53
  LESS_EQUAL    shift, and go to state 63
  LESS          shift, and go to state 62
  MORE          shift, and go to state 64
  MORE_EQUAL    shift, and go to state 65
  EQUAL         shift, and go to state 66
  INEQUAL       shift, and go to state 67
  AND           shift, and go to state 57
  OR            shift, and go to state 58
  APOSTROPHE    shift, and go to state 61
  $default      reduce using rule 42 (EXPR)


state 72

  20) ASSIGN : VARIABLE EQUAL EXPR _
  30) EXPR : EXPR _ PLUS EXPR
  31) EXPR : EXPR _ MINUS EXPR
  32) EXPR : EXPR _ MULTIPLY EXPR
  33) EXPR : EXPR _ DIVISION EXPR
  34) EXPR : EXPR _ PERCENT EXPR
  37) EXPR : EXPR _ AND EXPR
  38) EXPR : EXPR _ OR EXPR
  40) EXPR : EXPR _ AMPERSAND EXPR
  41) EXPR : EXPR _ VIRGUILE EXPR
  43) EXPR : EXPR _ APOSTROPHE
  44) EXPR : EXPR _ LESS EXPR
  45) EXPR : EXPR _ LESS_EQUAL EXPR
  46) EXPR : EXPR _ MORE EXPR
  47) EXPR : EXPR _ MORE_EQUAL EXPR
  48) EXPR : EXPR _ EQUAL EXPR
  49) EXPR : EXPR _ INEQUAL EXPR

  MULTIPLY      shift, and go to state 54
  DIVISION      shift, and go to state 55
  PERCENT       shift, and go to state 56
  PLUS          shift, and go to state 52
  MINUS         shift, and go to state 53
  LESS_EQUAL    shift, and go to state 63
  LESS          shift, and go to state 62
  MORE          shift, and go to state 64
  MORE_EQUAL    shift, and go to state 65
  EQUAL         shift, and go to state 66
  INEQUAL       shift, and go to state 67
  AND           shift, and go to state 57
  OR            shift, and go to state 58
  APOSTROPHE    shift, and go to state 61
  VIRGUILE      shift, and go to state 60
  AMPERSAND     shift, and go to state 59
  $default      reduce using rule 20 (ASSIGN)


state 73

  21) CONDIC : LPARENTHESIS EXPR INTERROGATION_MARK _ INSTR RPARENTHESIS
  22) CONDIC : LPARENTHESIS EXPR INTERROGATION_MARK _ INSTR COLON INSTR RPARENTHESIS

  READ          shift, and go to state 13
  WRITE         shift, and go to state 14
  IDENTIFIER    shift, and go to state 11
  LCURLY        shift, and go to state 3
  LBRACKET      shift, and go to state 21
  LPARENTHESIS  shift, and go to state 20

  INSTR         go to state 94
  ASSIGN        go to state 12
  CONDIC        go to state 15
  ITERIND       go to state 16
  ITERDET       go to state 17
  ESTRUCT       go to state 18
  VARIABLE      go to state 19

state 74

  23) ITERIND : LBRACKET EXPR PIPE _ INSTR RBRACKET

  READ          shift, and go to state 13
  WRITE         shift, and go to state 14
  IDENTIFIER    shift, and go to state 11
  LCURLY        shift, and go to state 3
  LBRACKET      shift, and go to state 21
  LPARENTHESIS  shift, and go to state 20

  INSTR         go to state 95
  ASSIGN        go to state 12
  CONDIC        go to state 15
  ITERIND       go to state 16
  ITERDET       go to state 17
  ESTRUCT       go to state 18
  VARIABLE      go to state 19

state 75

  24) ITERDET : LBRACKET EXPR DOUBLE_DOT _ EXPR PIPE INSTR RBRACKET

  MINUS         shift, and go to state 35
  NOT           shift, and go to state 37
  DOLLAR        shift, and go to state 38
  TRUE          shift, and go to state 40
  FALSE         shift, and go to state 41
  IDENTIFIER    shift, and go to state 11
  NUMBER        shift, and go to state 39
  EMPTY_CANVAS  shift, and go to state 43
  CANVAS        shift, and go to state 42
  LPARENTHESIS  shift, and go to state 36

  EXPR          go to state 96
  NUM           go to state 31
  BOOL          go to state 32
  LIEN          go to state 33
  VARIABLE      go to state 34

state 76

  25) ITERDET : LBRACKET VARIABLE COLON _ EXPR DOUBLE_DOT EXPR PIPE INSTR RBRACKET

  MINUS         shift, and go to state 35
  NOT           shift, and go to state 37
  DOLLAR        shift, and go to state 38
  TRUE          shift, and go to state 40
  FALSE         shift, and go to state 41
  IDENTIFIER    shift, and go to state 11
  NUMBER        shift, and go to state 39
  EMPTY_CANVAS  shift, and go to state 43
  CANVAS        shift, and go to state 42
  LPARENTHESIS  shift, and go to state 36

  EXPR          go to state 97
  NUM           go to state 31
  BOOL          go to state 32
  LIEN          go to state 33
  VARIABLE      go to state 34

state 77

   2) ESTRUCT : LCURLY DEC PIPE INSTR RCURLY _

  $default      reduce using rule 2 (ESTRUCT)


state 78

  30) EXPR : EXPR _ PLUS EXPR
  30) EXPR : EXPR PLUS EXPR _
  31) EXPR : EXPR _ MINUS EXPR
  32) EXPR : EXPR _ MULTIPLY EXPR
  33) EXPR : EXPR _ DIVISION EXPR
  34) EXPR : EXPR _ PERCENT EXPR
  37) EXPR : EXPR _ AND EXPR
  38) EXPR : EXPR _ OR EXPR
  40) EXPR : EXPR _ AMPERSAND EXPR
  41) EXPR : EXPR _ VIRGUILE EXPR
  43) EXPR : EXPR _ APOSTROPHE
  44) EXPR : EXPR _ LESS EXPR
  45) EXPR : EXPR _ LESS_EQUAL EXPR
  46) EXPR : EXPR _ MORE EXPR
  47) EXPR : EXPR _ MORE_EQUAL EXPR
  48) EXPR : EXPR _ EQUAL EXPR
  49) EXPR : EXPR _ INEQUAL EXPR

  MULTIPLY      shift, and go to state 54
  DIVISION      shift, and go to state 55
  PERCENT       shift, and go to state 56
  $default      reduce using rule 30 (EXPR)


state 79

  30) EXPR : EXPR _ PLUS EXPR
  31) EXPR : EXPR _ MINUS EXPR
  31) EXPR : EXPR MINUS EXPR _
  32) EXPR : EXPR _ MULTIPLY EXPR
  33) EXPR : EXPR _ DIVISION EXPR
  34) EXPR : EXPR _ PERCENT EXPR
  37) EXPR : EXPR _ AND EXPR
  38) EXPR : EXPR _ OR EXPR
  40) EXPR : EXPR _ AMPERSAND EXPR
  41) EXPR : EXPR _ VIRGUILE EXPR
  43) EXPR : EXPR _ APOSTROPHE
  44) EXPR : EXPR _ LESS EXPR
  45) EXPR : EXPR _ LESS_EQUAL EXPR
  46) EXPR : EXPR _ MORE EXPR
  47) EXPR : EXPR _ MORE_EQUAL EXPR
  48) EXPR : EXPR _ EQUAL EXPR
  49) EXPR : EXPR _ INEQUAL EXPR

  MULTIPLY      shift, and go to state 54
  DIVISION      shift, and go to state 55
  PERCENT       shift, and go to state 56
  $default      reduce using rule 31 (EXPR)


state 80

  30) EXPR : EXPR _ PLUS EXPR
  31) EXPR : EXPR _ MINUS EXPR
  32) EXPR : EXPR _ MULTIPLY EXPR
  32) EXPR : EXPR MULTIPLY EXPR _
  33) EXPR : EXPR _ DIVISION EXPR
  34) EXPR : EXPR _ PERCENT EXPR
  37) EXPR : EXPR _ AND EXPR
  38) EXPR : EXPR _ OR EXPR
  40) EXPR : EXPR _ AMPERSAND EXPR
  41) EXPR : EXPR _ VIRGUILE EXPR
  43) EXPR : EXPR _ APOSTROPHE
  44) EXPR : EXPR _ LESS EXPR
  45) EXPR : EXPR _ LESS_EQUAL EXPR
  46) EXPR : EXPR _ MORE EXPR
  47) EXPR : EXPR _ MORE_EQUAL EXPR
  48) EXPR : EXPR _ EQUAL EXPR
  49) EXPR : EXPR _ INEQUAL EXPR

  $default      reduce using rule 32 (EXPR)


state 81

  30) EXPR : EXPR _ PLUS EXPR
  31) EXPR : EXPR _ MINUS EXPR
  32) EXPR : EXPR _ MULTIPLY EXPR
  33) EXPR : EXPR _ DIVISION EXPR
  33) EXPR : EXPR DIVISION EXPR _
  34) EXPR : EXPR _ PERCENT EXPR
  37) EXPR : EXPR _ AND EXPR
  38) EXPR : EXPR _ OR EXPR
  40) EXPR : EXPR _ AMPERSAND EXPR
  41) EXPR : EXPR _ VIRGUILE EXPR
  43) EXPR : EXPR _ APOSTROPHE
  44) EXPR : EXPR _ LESS EXPR
  45) EXPR : EXPR _ LESS_EQUAL EXPR
  46) EXPR : EXPR _ MORE EXPR
  47) EXPR : EXPR _ MORE_EQUAL EXPR
  48) EXPR : EXPR _ EQUAL EXPR
  49) EXPR : EXPR _ INEQUAL EXPR

  $default      reduce using rule 33 (EXPR)


state 82

  30) EXPR : EXPR _ PLUS EXPR
  31) EXPR : EXPR _ MINUS EXPR
  32) EXPR : EXPR _ MULTIPLY EXPR
  33) EXPR : EXPR _ DIVISION EXPR
  34) EXPR : EXPR _ PERCENT EXPR
  34) EXPR : EXPR PERCENT EXPR _
  37) EXPR : EXPR _ AND EXPR
  38) EXPR : EXPR _ OR EXPR
  40) EXPR : EXPR _ AMPERSAND EXPR
  41) EXPR : EXPR _ VIRGUILE EXPR
  43) EXPR : EXPR _ APOSTROPHE
  44) EXPR : EXPR _ LESS EXPR
  45) EXPR : EXPR _ LESS_EQUAL EXPR
  46) EXPR : EXPR _ MORE EXPR
  47) EXPR : EXPR _ MORE_EQUAL EXPR
  48) EXPR : EXPR _ EQUAL EXPR
  49) EXPR : EXPR _ INEQUAL EXPR

  $default      reduce using rule 34 (EXPR)


state 83

  30) EXPR : EXPR _ PLUS EXPR
  31) EXPR : EXPR _ MINUS EXPR
  32) EXPR : EXPR _ MULTIPLY EXPR
  33) EXPR : EXPR _ DIVISION EXPR
  34) EXPR : EXPR _ PERCENT EXPR
  37) EXPR : EXPR _ AND EXPR
  37) EXPR : EXPR AND EXPR _
  38) EXPR : EXPR _ OR EXPR
  40) EXPR : EXPR _ AMPERSAND EXPR
  41) EXPR : EXPR _ VIRGUILE EXPR
  43) EXPR : EXPR _ APOSTROPHE
  44) EXPR : EXPR _ LESS EXPR
  45) EXPR : EXPR _ LESS_EQUAL EXPR
  46) EXPR : EXPR _ MORE EXPR
  47) EXPR : EXPR _ MORE_EQUAL EXPR
  48) EXPR : EXPR _ EQUAL EXPR
  49) EXPR : EXPR _ INEQUAL EXPR

  MULTIPLY      shift, and go to state 54
  DIVISION      shift, and go to state 55
  PERCENT       shift, and go to state 56
  PLUS          shift, and go to state 52
  MINUS         shift, and go to state 53
  LESS_EQUAL    shift, and go to state 63
  LESS          shift, and go to state 62
  MORE          shift, and go to state 64
  MORE_EQUAL    shift, and go to state 65
  EQUAL         shift, and go to state 66
  INEQUAL       shift, and go to state 67
  $default      reduce using rule 37 (EXPR)


state 84

  30) EXPR : EXPR _ PLUS EXPR
  31) EXPR : EXPR _ MINUS EXPR
  32) EXPR : EXPR _ MULTIPLY EXPR
  33) EXPR : EXPR _ DIVISION EXPR
  34) EXPR : EXPR _ PERCENT EXPR
  37) EXPR : EXPR _ AND EXPR
  38) EXPR : EXPR _ OR EXPR
  38) EXPR : EXPR OR EXPR _
  40) EXPR : EXPR _ AMPERSAND EXPR
  41) EXPR : EXPR _ VIRGUILE EXPR
  43) EXPR : EXPR _ APOSTROPHE
  44) EXPR : EXPR _ LESS EXPR
  45) EXPR : EXPR _ LESS_EQUAL EXPR
  46) EXPR : EXPR _ MORE EXPR
  47) EXPR : EXPR _ MORE_EQUAL EXPR
  48) EXPR : EXPR _ EQUAL EXPR
  49) EXPR : EXPR _ INEQUAL EXPR

  MULTIPLY      shift, and go to state 54
  DIVISION      shift, and go to state 55
  PERCENT       shift, and go to state 56
  PLUS          shift, and go to state 52
  MINUS         shift, and go to state 53
  LESS_EQUAL    shift, and go to state 63
  LESS          shift, and go to state 62
  MORE          shift, and go to state 64
  MORE_EQUAL    shift, and go to state 65
  EQUAL         shift, and go to state 66
  INEQUAL       shift, and go to state 67
  AND           shift, and go to state 57
  $default      reduce using rule 38 (EXPR)


state 85

  30) EXPR : EXPR _ PLUS EXPR
  31) EXPR : EXPR _ MINUS EXPR
  32) EXPR : EXPR _ MULTIPLY EXPR
  33) EXPR : EXPR _ DIVISION EXPR
  34) EXPR : EXPR _ PERCENT EXPR
  37) EXPR : EXPR _ AND EXPR
  38) EXPR : EXPR _ OR EXPR
  40) EXPR : EXPR _ AMPERSAND EXPR
  40) EXPR : EXPR AMPERSAND EXPR _
  41) EXPR : EXPR _ VIRGUILE EXPR
  43) EXPR : EXPR _ APOSTROPHE
  44) EXPR : EXPR _ LESS EXPR
  45) EXPR : EXPR _ LESS_EQUAL EXPR
  46) EXPR : EXPR _ MORE EXPR
  47) EXPR : EXPR _ MORE_EQUAL EXPR
  48) EXPR : EXPR _ EQUAL EXPR
  49) EXPR : EXPR _ INEQUAL EXPR

  MULTIPLY      shift, and go to state 54
  DIVISION      shift, and go to state 55
  PERCENT       shift, and go to state 56
  PLUS          shift, and go to state 52
  MINUS         shift, and go to state 53
  LESS_EQUAL    shift, and go to state 63
  LESS          shift, and go to state 62
  MORE          shift, and go to state 64
  MORE_EQUAL    shift, and go to state 65
  EQUAL         shift, and go to state 66
  INEQUAL       shift, and go to state 67
  AND           shift, and go to state 57
  OR            shift, and go to state 58
  APOSTROPHE    shift, and go to state 61
  $default      reduce using rule 40 (EXPR)


state 86

  30) EXPR : EXPR _ PLUS EXPR
  31) EXPR : EXPR _ MINUS EXPR
  32) EXPR : EXPR _ MULTIPLY EXPR
  33) EXPR : EXPR _ DIVISION EXPR
  34) EXPR : EXPR _ PERCENT EXPR
  37) EXPR : EXPR _ AND EXPR
  38) EXPR : EXPR _ OR EXPR
  40) EXPR : EXPR _ AMPERSAND EXPR
  41) EXPR : EXPR _ VIRGUILE EXPR
  41) EXPR : EXPR VIRGUILE EXPR _
  43) EXPR : EXPR _ APOSTROPHE
  44) EXPR : EXPR _ LESS EXPR
  45) EXPR : EXPR _ LESS_EQUAL EXPR
  46) EXPR : EXPR _ MORE EXPR
  47) EXPR : EXPR _ MORE_EQUAL EXPR
  48) EXPR : EXPR _ EQUAL EXPR
  49) EXPR : EXPR _ INEQUAL EXPR

  MULTIPLY      shift, and go to state 54
  DIVISION      shift, and go to state 55
  PERCENT       shift, and go to state 56
  PLUS          shift, and go to state 52
  MINUS         shift, and go to state 53
  LESS_EQUAL    shift, and go to state 63
  LESS          shift, and go to state 62
  MORE          shift, and go to state 64
  MORE_EQUAL    shift, and go to state 65
  EQUAL         shift, and go to state 66
  INEQUAL       shift, and go to state 67
  AND           shift, and go to state 57
  OR            shift, and go to state 58
  APOSTROPHE    shift, and go to state 61
  $default      reduce using rule 41 (EXPR)


state 87

  30) EXPR : EXPR _ PLUS EXPR
  31) EXPR : EXPR _ MINUS EXPR
  32) EXPR : EXPR _ MULTIPLY EXPR
  33) EXPR : EXPR _ DIVISION EXPR
  34) EXPR : EXPR _ PERCENT EXPR
  37) EXPR : EXPR _ AND EXPR
  38) EXPR : EXPR _ OR EXPR
  40) EXPR : EXPR _ AMPERSAND EXPR
  41) EXPR : EXPR _ VIRGUILE EXPR
  43) EXPR : EXPR _ APOSTROPHE
  44) EXPR : EXPR _ LESS EXPR
  44) EXPR : EXPR LESS EXPR _
  45) EXPR : EXPR _ LESS_EQUAL EXPR
  46) EXPR : EXPR _ MORE EXPR
  47) EXPR : EXPR _ MORE_EQUAL EXPR
  48) EXPR : EXPR _ EQUAL EXPR
  49) EXPR : EXPR _ INEQUAL EXPR

  MULTIPLY      shift, and go to state 54
  DIVISION      shift, and go to state 55
  PERCENT       shift, and go to state 56
  PLUS          shift, and go to state 52
  MINUS         shift, and go to state 53
  LESS_EQUAL    error
  LESS          error
  MORE          error
  MORE_EQUAL    error
  $default      reduce using rule 44 (EXPR)


state 88

  30) EXPR : EXPR _ PLUS EXPR
  31) EXPR : EXPR _ MINUS EXPR
  32) EXPR : EXPR _ MULTIPLY EXPR
  33) EXPR : EXPR _ DIVISION EXPR
  34) EXPR : EXPR _ PERCENT EXPR
  37) EXPR : EXPR _ AND EXPR
  38) EXPR : EXPR _ OR EXPR
  40) EXPR : EXPR _ AMPERSAND EXPR
  41) EXPR : EXPR _ VIRGUILE EXPR
  43) EXPR : EXPR _ APOSTROPHE
  44) EXPR : EXPR _ LESS EXPR
  45) EXPR : EXPR _ LESS_EQUAL EXPR
  45) EXPR : EXPR LESS_EQUAL EXPR _
  46) EXPR : EXPR _ MORE EXPR
  47) EXPR : EXPR _ MORE_EQUAL EXPR
  48) EXPR : EXPR _ EQUAL EXPR
  49) EXPR : EXPR _ INEQUAL EXPR

  MULTIPLY      shift, and go to state 54
  DIVISION      shift, and go to state 55
  PERCENT       shift, and go to state 56
  PLUS          shift, and go to state 52
  MINUS         shift, and go to state 53
  LESS_EQUAL    error
  LESS          error
  MORE          error
  MORE_EQUAL    error
  $default      reduce using rule 45 (EXPR)


state 89

  30) EXPR : EXPR _ PLUS EXPR
  31) EXPR : EXPR _ MINUS EXPR
  32) EXPR : EXPR _ MULTIPLY EXPR
  33) EXPR : EXPR _ DIVISION EXPR
  34) EXPR : EXPR _ PERCENT EXPR
  37) EXPR : EXPR _ AND EXPR
  38) EXPR : EXPR _ OR EXPR
  40) EXPR : EXPR _ AMPERSAND EXPR
  41) EXPR : EXPR _ VIRGUILE EXPR
  43) EXPR : EXPR _ APOSTROPHE
  44) EXPR : EXPR _ LESS EXPR
  45) EXPR : EXPR _ LESS_EQUAL EXPR
  46) EXPR : EXPR _ MORE EXPR
  46) EXPR : EXPR MORE EXPR _
  47) EXPR : EXPR _ MORE_EQUAL EXPR
  48) EXPR : EXPR _ EQUAL EXPR
  49) EXPR : EXPR _ INEQUAL EXPR

  MULTIPLY      shift, and go to state 54
  DIVISION      shift, and go to state 55
  PERCENT       shift, and go to state 56
  PLUS          shift, and go to state 52
  MINUS         shift, and go to state 53
  LESS_EQUAL    error
  LESS          error
  MORE          error
  MORE_EQUAL    error
  $default      reduce using rule 46 (EXPR)


state 90

  30) EXPR : EXPR _ PLUS EXPR
  31) EXPR : EXPR _ MINUS EXPR
  32) EXPR : EXPR _ MULTIPLY EXPR
  33) EXPR : EXPR _ DIVISION EXPR
  34) EXPR : EXPR _ PERCENT EXPR
  37) EXPR : EXPR _ AND EXPR
  38) EXPR : EXPR _ OR EXPR
  40) EXPR : EXPR _ AMPERSAND EXPR
  41) EXPR : EXPR _ VIRGUILE EXPR
  43) EXPR : EXPR _ APOSTROPHE
  44) EXPR : EXPR _ LESS EXPR
  45) EXPR : EXPR _ LESS_EQUAL EXPR
  46) EXPR : EXPR _ MORE EXPR
  47) EXPR : EXPR _ MORE_EQUAL EXPR
  47) EXPR : EXPR MORE_EQUAL EXPR _
  48) EXPR : EXPR _ EQUAL EXPR
  49) EXPR : EXPR _ INEQUAL EXPR

  MULTIPLY      shift, and go to state 54
  DIVISION      shift, and go to state 55
  PERCENT       shift, and go to state 56
  PLUS          shift, and go to state 52
  MINUS         shift, and go to state 53
  LESS_EQUAL    error
  LESS          error
  MORE          error
  MORE_EQUAL    error
  $default      reduce using rule 47 (EXPR)


state 91

  30) EXPR : EXPR _ PLUS EXPR
  31) EXPR : EXPR _ MINUS EXPR
  32) EXPR : EXPR _ MULTIPLY EXPR
  33) EXPR : EXPR _ DIVISION EXPR
  34) EXPR : EXPR _ PERCENT EXPR
  37) EXPR : EXPR _ AND EXPR
  38) EXPR : EXPR _ OR EXPR
  40) EXPR : EXPR _ AMPERSAND EXPR
  41) EXPR : EXPR _ VIRGUILE EXPR
  43) EXPR : EXPR _ APOSTROPHE
  44) EXPR : EXPR _ LESS EXPR
  45) EXPR : EXPR _ LESS_EQUAL EXPR
  46) EXPR : EXPR _ MORE EXPR
  47) EXPR : EXPR _ MORE_EQUAL EXPR
  48) EXPR : EXPR _ EQUAL EXPR
  48) EXPR : EXPR EQUAL EXPR _
  49) EXPR : EXPR _ INEQUAL EXPR

  MULTIPLY      shift, and go to state 54
  DIVISION      shift, and go to state 55
  PERCENT       shift, and go to state 56
  PLUS          shift, and go to state 52
  MINUS         shift, and go to state 53
  LESS_EQUAL    shift, and go to state 63
  LESS          shift, and go to state 62
  MORE          shift, and go to state 64
  MORE_EQUAL    shift, and go to state 65
  EQUAL         error
  INEQUAL       error
  $default      reduce using rule 48 (EXPR)


state 92

  30) EXPR : EXPR _ PLUS EXPR
  31) EXPR : EXPR _ MINUS EXPR
  32) EXPR : EXPR _ MULTIPLY EXPR
  33) EXPR : EXPR _ DIVISION EXPR
  34) EXPR : EXPR _ PERCENT EXPR
  37) EXPR : EXPR _ AND EXPR
  38) EXPR : EXPR _ OR EXPR
  40) EXPR : EXPR _ AMPERSAND EXPR
  41) EXPR : EXPR _ VIRGUILE EXPR
  43) EXPR : EXPR _ APOSTROPHE
  44) EXPR : EXPR _ LESS EXPR
  45) EXPR : EXPR _ LESS_EQUAL EXPR
  46) EXPR : EXPR _ MORE EXPR
  47) EXPR : EXPR _ MORE_EQUAL EXPR
  48) EXPR : EXPR _ EQUAL EXPR
  49) EXPR : EXPR _ INEQUAL EXPR
  49) EXPR : EXPR INEQUAL EXPR _

  MULTIPLY      shift, and go to state 54
  DIVISION      shift, and go to state 55
  PERCENT       shift, and go to state 56
  PLUS          shift, and go to state 52
  MINUS         shift, and go to state 53
  LESS_EQUAL    shift, and go to state 63
  LESS          shift, and go to state 62
  MORE          shift, and go to state 64
  MORE_EQUAL    shift, and go to state 65
  EQUAL         error
  INEQUAL       error
  $default      reduce using rule 49 (EXPR)


state 93

  36) EXPR : LPARENTHESIS EXPR RPARENTHESIS _

  $default      reduce using rule 36 (EXPR)


state 94

  12) INSTR : INSTR _ SEMI_COLON INSTR
  21) CONDIC : LPARENTHESIS EXPR INTERROGATION_MARK INSTR _ RPARENTHESIS
  22) CONDIC : LPARENTHESIS EXPR INTERROGATION_MARK INSTR _ COLON INSTR RPARENTHESIS

  SEMI_COLON    shift, and go to state 26
  COLON         shift, and go to state 99
  RPARENTHESIS  shift, and go to state 98


state 95

  12) INSTR : INSTR _ SEMI_COLON INSTR
  23) ITERIND : LBRACKET EXPR PIPE INSTR _ RBRACKET

  SEMI_COLON    shift, and go to state 26
  RBRACKET      shift, and go to state 100


state 96

  24) ITERDET : LBRACKET EXPR DOUBLE_DOT EXPR _ PIPE INSTR RBRACKET
  30) EXPR : EXPR _ PLUS EXPR
  31) EXPR : EXPR _ MINUS EXPR
  32) EXPR : EXPR _ MULTIPLY EXPR
  33) EXPR : EXPR _ DIVISION EXPR
  34) EXPR : EXPR _ PERCENT EXPR
  37) EXPR : EXPR _ AND EXPR
  38) EXPR : EXPR _ OR EXPR
  40) EXPR : EXPR _ AMPERSAND EXPR
  41) EXPR : EXPR _ VIRGUILE EXPR
  43) EXPR : EXPR _ APOSTROPHE
  44) EXPR : EXPR _ LESS EXPR
  45) EXPR : EXPR _ LESS_EQUAL EXPR
  46) EXPR : EXPR _ MORE EXPR
  47) EXPR : EXPR _ MORE_EQUAL EXPR
  48) EXPR : EXPR _ EQUAL EXPR
  49) EXPR : EXPR _ INEQUAL EXPR

  PIPE          shift, and go to state 101
  MULTIPLY      shift, and go to state 54
  DIVISION      shift, and go to state 55
  PERCENT       shift, and go to state 56
  PLUS          shift, and go to state 52
  MINUS         shift, and go to state 53
  LESS_EQUAL    shift, and go to state 63
  LESS          shift, and go to state 62
  MORE          shift, and go to state 64
  MORE_EQUAL    shift, and go to state 65
  EQUAL         shift, and go to state 66
  INEQUAL       shift, and go to state 67
  AND           shift, and go to state 57
  OR            shift, and go to state 58
  APOSTROPHE    shift, and go to state 61
  VIRGUILE      shift, and go to state 60
  AMPERSAND     shift, and go to state 59


state 97

  25) ITERDET : LBRACKET VARIABLE COLON EXPR _ DOUBLE_DOT EXPR PIPE INSTR RBRACKET
  30) EXPR : EXPR _ PLUS EXPR
  31) EXPR : EXPR _ MINUS EXPR
  32) EXPR : EXPR _ MULTIPLY EXPR
  33) EXPR : EXPR _ DIVISION EXPR
  34) EXPR : EXPR _ PERCENT EXPR
  37) EXPR : EXPR _ AND EXPR
  38) EXPR : EXPR _ OR EXPR
  40) EXPR : EXPR _ AMPERSAND EXPR
  41) EXPR : EXPR _ VIRGUILE EXPR
  43) EXPR : EXPR _ APOSTROPHE
  44) EXPR : EXPR _ LESS EXPR
  45) EXPR : EXPR _ LESS_EQUAL EXPR
  46) EXPR : EXPR _ MORE EXPR
  47) EXPR : EXPR _ MORE_EQUAL EXPR
  48) EXPR : EXPR _ EQUAL EXPR
  49) EXPR : EXPR _ INEQUAL EXPR

  DOUBLE_DOT    shift, and go to state 102
  MULTIPLY      shift, and go to state 54
  DIVISION      shift, and go to state 55
  PERCENT       shift, and go to state 56
  PLUS          shift, and go to state 52
  MINUS         shift, and go to state 53
  LESS_EQUAL    shift, and go to state 63
  LESS          shift, and go to state 62
  MORE          shift, and go to state 64
  MORE_EQUAL    shift, and go to state 65
  EQUAL         shift, and go to state 66
  INEQUAL       shift, and go to state 67
  AND           shift, and go to state 57
  OR            shift, and go to state 58
  APOSTROPHE    shift, and go to state 61
  VIRGUILE      shift, and go to state 60
  AMPERSAND     shift, and go to state 59


state 98

  21) CONDIC : LPARENTHESIS EXPR INTERROGATION_MARK INSTR RPARENTHESIS _

  $default      reduce using rule 21 (CONDIC)


state 99

  22) CONDIC : LPARENTHESIS EXPR INTERROGATION_MARK INSTR COLON _ INSTR RPARENTHESIS

  READ          shift, and go to state 13
  WRITE         shift, and go to state 14
  IDENTIFIER    shift, and go to state 11
  LCURLY        shift, and go to state 3
  LBRACKET      shift, and go to state 21
  LPARENTHESIS  shift, and go to state 20

  INSTR         go to state 103
  ASSIGN        go to state 12
  CONDIC        go to state 15
  ITERIND       go to state 16
  ITERDET       go to state 17
  ESTRUCT       go to state 18
  VARIABLE      go to state 19

state 100

  23) ITERIND : LBRACKET EXPR PIPE INSTR RBRACKET _

  $default      reduce using rule 23 (ITERIND)


state 101

  24) ITERDET : LBRACKET EXPR DOUBLE_DOT EXPR PIPE _ INSTR RBRACKET

  READ          shift, and go to state 13
  WRITE         shift, and go to state 14
  IDENTIFIER    shift, and go to state 11
  LCURLY        shift, and go to state 3
  LBRACKET      shift, and go to state 21
  LPARENTHESIS  shift, and go to state 20

  INSTR         go to state 104
  ASSIGN        go to state 12
  CONDIC        go to state 15
  ITERIND       go to state 16
  ITERDET       go to state 17
  ESTRUCT       go to state 18
  VARIABLE      go to state 19

state 102

  25) ITERDET : LBRACKET VARIABLE COLON EXPR DOUBLE_DOT _ EXPR PIPE INSTR RBRACKET

  MINUS         shift, and go to state 35
  NOT           shift, and go to state 37
  DOLLAR        shift, and go to state 38
  TRUE          shift, and go to state 40
  FALSE         shift, and go to state 41
  IDENTIFIER    shift, and go to state 11
  NUMBER        shift, and go to state 39
  EMPTY_CANVAS  shift, and go to state 43
  CANVAS        shift, and go to state 42
  LPARENTHESIS  shift, and go to state 36

  EXPR          go to state 105
  NUM           go to state 31
  BOOL          go to state 32
  LIEN          go to state 33
  VARIABLE      go to state 34

state 103

  12) INSTR : INSTR _ SEMI_COLON INSTR
  22) CONDIC : LPARENTHESIS EXPR INTERROGATION_MARK INSTR COLON INSTR _ RPARENTHESIS

  SEMI_COLON    shift, and go to state 26
  RPARENTHESIS  shift, and go to state 106


state 104

  12) INSTR : INSTR _ SEMI_COLON INSTR
  24) ITERDET : LBRACKET EXPR DOUBLE_DOT EXPR PIPE INSTR _ RBRACKET

  SEMI_COLON    shift, and go to state 26
  RBRACKET      shift, and go to state 107


state 105

  25) ITERDET : LBRACKET VARIABLE COLON EXPR DOUBLE_DOT EXPR _ PIPE INSTR RBRACKET
  30) EXPR : EXPR _ PLUS EXPR
  31) EXPR : EXPR _ MINUS EXPR
  32) EXPR : EXPR _ MULTIPLY EXPR
  33) EXPR : EXPR _ DIVISION EXPR
  34) EXPR : EXPR _ PERCENT EXPR
  37) EXPR : EXPR _ AND EXPR
  38) EXPR : EXPR _ OR EXPR
  40) EXPR : EXPR _ AMPERSAND EXPR
  41) EXPR : EXPR _ VIRGUILE EXPR
  43) EXPR : EXPR _ APOSTROPHE
  44) EXPR : EXPR _ LESS EXPR
  45) EXPR : EXPR _ LESS_EQUAL EXPR
  46) EXPR : EXPR _ MORE EXPR
  47) EXPR : EXPR _ MORE_EQUAL EXPR
  48) EXPR : EXPR _ EQUAL EXPR
  49) EXPR : EXPR _ INEQUAL EXPR

  PIPE          shift, and go to state 108
  MULTIPLY      shift, and go to state 54
  DIVISION      shift, and go to state 55
  PERCENT       shift, and go to state 56
  PLUS          shift, and go to state 52
  MINUS         shift, and go to state 53
  LESS_EQUAL    shift, and go to state 63
  LESS          shift, and go to state 62
  MORE          shift, and go to state 64
  MORE_EQUAL    shift, and go to state 65
  EQUAL         shift, and go to state 66
  INEQUAL       shift, and go to state 67
  AND           shift, and go to state 57
  OR            shift, and go to state 58
  APOSTROPHE    shift, and go to state 61
  VIRGUILE      shift, and go to state 60
  AMPERSAND     shift, and go to state 59


state 106

  22) CONDIC : LPARENTHESIS EXPR INTERROGATION_MARK INSTR COLON INSTR RPARENTHESIS _

  $default      reduce using rule 22 (CONDIC)


state 107

  24) ITERDET : LBRACKET EXPR DOUBLE_DOT EXPR PIPE INSTR RBRACKET _

  $default      reduce using rule 24 (ITERDET)


state 108

  25) ITERDET : LBRACKET VARIABLE COLON EXPR DOUBLE_DOT EXPR PIPE _ INSTR RBRACKET

  READ          shift, and go to state 13
  WRITE         shift, and go to state 14
  IDENTIFIER    shift, and go to state 11
  LCURLY        shift, and go to state 3
  LBRACKET      shift, and go to state 21
  LPARENTHESIS  shift, and go to state 20

  INSTR         go to state 109
  ASSIGN        go to state 12
  CONDIC        go to state 15
  ITERIND       go to state 16
  ITERDET       go to state 17
  ESTRUCT       go to state 18
  VARIABLE      go to state 19

state 109

  12) INSTR : INSTR _ SEMI_COLON INSTR
  25) ITERDET : LBRACKET VARIABLE COLON EXPR DOUBLE_DOT EXPR PIPE INSTR _ RBRACKET

  SEMI_COLON    shift, and go to state 26
  RBRACKET      shift, and go to state 110


state 110

  25) ITERDET : LBRACKET VARIABLE COLON EXPR DOUBLE_DOT EXPR PIPE INSTR RBRACKET _

  $default      reduce using rule 25 (ITERDET)

